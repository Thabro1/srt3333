-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Player & Character References
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local backpack = player:WaitForChild("Backpack")

player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    backpack = player:WaitForChild("Backpack")
end)

-- ===============================
-- Flying Carpet to Spawn Feature
-- ===============================
local savedSpawn = rootPart.Position
print("Spawn automatically saved at:", savedSpawn)

local returnToSpawn = false
local returnSpeed = 23

local bodyVelocity = Instance.new("BodyVelocity")
bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
bodyVelocity.Velocity = Vector3.new(0, 0, 0)
bodyVelocity.Parent = nil

local function equipFlyingCarpet()
    local tool = backpack:FindFirstChild("Flying Carpet") or character:FindFirstChild("Flying Carpet")
    if tool then
        tool.Parent = character
    else
        print("Flying Carpet not found in backpack or character!")
    end
end

-- Press R to float back to spawn
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.R then
        returnToSpawn = true
        bodyVelocity.Parent = rootPart
        equipFlyingCarpet()
        print("Floating back to spawn with Flying Carpet...")
    end
end)

-- Smooth float back to spawn
RunService.RenderStepped:Connect(function()
    if returnToSpawn then
        local direction = savedSpawn - rootPart.Position
        local distance = direction.Magnitude
        if distance < 1 then
            returnToSpawn = false
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.Parent = nil
            print("Arrived at spawn!")
        else
            equipFlyingCarpet()
            bodyVelocity.Velocity = direction.Unit * returnSpeed
        end
    end
end)

-- ===============================
-- Auto Laser Cape Feature
-- ===============================
local TOOL_NAME = "Laser Cape"
local CLICK_INTERVAL = 0.2
local EQUIP_INTERVAL = 10
local floatHeight = 13
local floatDuration = 1

local lastClickTime = 0
local lastEquipTimes = {}
local floating = false
local autoLaserCapeEnabled = true -- auto start enabled

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoLaserCapeGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 40)
frame.Position = UDim2.new(0, 20, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = frame

local label = Instance.new("TextLabel")
label.Text = "Auto Laser Cape"
label.Size = UDim2.new(0, 140, 1, 0)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1, 1, 1)
label.Font = Enum.Font.Gotham
label.TextSize = 18
label.TextXAlignment = Enum.TextXAlignment.Left
label.Position = UDim2.new(0, 10, 0, 0)
label.Parent = frame

local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 50, 0, 25)
toggle.Position = UDim2.new(1, -60, 0, 7)
toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggle.BorderSizePixel = 0
toggle.Text = ""
toggle.Parent = frame

local toggleUICorner = Instance.new("UICorner")
toggleUICorner.CornerRadius = UDim.new(0, 12)
toggleUICorner.Parent = toggle

local toggleCircle = Instance.new("Frame")
toggleCircle.Size = UDim2.new(0, 20, 0, 20)
toggleCircle.Position = UDim2.new(0, 3, 0, 3)
toggleCircle.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
toggleCircle.Parent = toggle

local toggleCircleCorner = Instance.new("UICorner")
toggleCircleCorner.CornerRadius = UDim.new(1, 0)
toggleCircleCorner.Parent = toggleCircle

local function updateToggle(state)
    if state then
        toggle.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
        toggleCircle:TweenPosition(UDim2.new(0, 27, 0, 3), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true)
    else
        toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        toggleCircle:TweenPosition(UDim2.new(0, 3, 0, 3), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true)
    end
end

updateToggle(autoLaserCapeEnabled)

toggle.MouseButton1Click:Connect(function()
    autoLaserCapeEnabled = not autoLaserCapeEnabled
    updateToggle(autoLaserCapeEnabled)
end)

-- ESP Function
local function addESP(targetPlayer)
    local char = targetPlayer.Character
    if not char then return end
    local head = char:FindFirstChild("Head")
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not head or not hrp then return end
    if head:FindFirstChild("BigNameESP") then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BigNameESP"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = Color3.new(0, 1, 0)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Parent = billboard
    billboard.Parent = head

    local box = Instance.new("BoxHandleAdornment")
    box.Name = "ESPBox"
    box.Adornee = hrp
    box.Size = Vector3.new(4, 6, 2)
    box.Color3 = Color3.new(0, 1, 0)
    box.Transparency = 0.6
    box.AlwaysOnTop = true
    box.ZIndex = 5
    box.Parent = hrp
end

local function equipAndClick(targetPlayer)
    if not autoLaserCapeEnabled then return end
    local char = targetPlayer.Character
    if not char then return end
    addESP(targetPlayer)

    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    local backpack = targetPlayer:FindFirstChild("Backpack")
    if not backpack then return end

    local toolInChar = char:FindFirstChildOfClass("Tool")
    local toolInBackpack = backpack:FindFirstChild(TOOL_NAME)

    local now = tick()
    local lastEquipTime = lastEquipTimes[targetPlayer] or 0
    if now - lastEquipTime >= EQUIP_INTERVAL then
        if toolInChar and toolInChar.Name == TOOL_NAME then
            toolInChar.Parent = backpack
        end
        if toolInBackpack then
            hum:EquipTool(toolInBackpack)
            lastEquipTimes[targetPlayer] = now
        end
    end

    toolInChar = char:FindFirstChildOfClass("Tool")
    if toolInChar and toolInChar.Name == TOOL_NAME then
        if now - lastClickTime >= CLICK_INTERVAL then
            pcall(function()
                toolInChar:Activate()
            end)
            lastClickTime = now
        end
    end
end

RunService.Heartbeat:Connect(function()
    if autoLaserCapeEnabled then
        for _, p in pairs(Players:GetPlayers()) do
            equipAndClick(p)
        end
    end
end)

Players.PlayerAdded:Connect(function(p)
    p.CharacterAdded:Connect(function()
        task.wait(1)
        addESP(p)
    end)
end)

-- Float ability (spacebar)
local function floatCharacter()
    if floating then return end
    floating = true
    humanoid.Jump = true
    repeat task.wait() until humanoid:GetState() == Enum.HumanoidStateType.Freefall

    local bodyPosition = Instance.new("BodyPosition")
    bodyPosition.MaxForce = Vector3.new(0, math.huge, 0)
    bodyPosition.Position = rootPart.Position + Vector3.new(0, floatHeight, 0)
    bodyPosition.Parent = rootPart

    task.wait(floatDuration)
    bodyPosition:Destroy()
    floating = false
end

-- Input handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.Space then
        floatCharacter()
    end

    if input.KeyCode == Enum.KeyCode.F5 then
        autoLaserCapeEnabled = not autoLaserCapeEnabled
        updateToggle(autoLaserCapeEnabled)
    end
end)
